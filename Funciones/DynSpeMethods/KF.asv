function ImKF = KF(carpeta,L,N,mask)

extension = 'dat';
resol = [L L];
bloques = 1;
imxbloque = N;
imagenes = bloques * imxbloque;
ImKF = zeros(resol);

for k_col = 1:resol(2)
    thsp_total = obtener_columna(carpeta,resol,imagenes,k_col,'float32');
    for k_bloque = 1:imxbloque:imagenes
        bloque = (k_bloque-1)/imxbloque+1;
        thsp = thsp_total(:,k_bloque+(0:imxbloque-1));
        
        % Se usa la fï¿½rmula de Konishi - Fujii
        medias = mean(thsp,2);
        thsp = thsp - repmat(medias,1,imxbloque); % Se quita la media
        pseudo_std = sum(abs(thsp),2) / imxbloque;
        try
            pseudo_std(find(pseudo_std==0)) = pseudo_std(find(pseudo_std==0)+1);
            medias(pseudo_std==0) = medias(find(pseudo_std==0)+1);
        catch
            pseudo_std(find(pseudo_std==0)) = pseudo_std(find(pseudo_std==0)-1);
            medias(pseudo_std==0) = medias(find(pseudo_std==0)-1);
        end
        ImKF(:,k_col) = medias ./ pseudo_std;
        
    end
end

tamQuad = 21;
win = window(@chebwin,tamQuad);
Filtro2D = repmat(win,1,tamQuad).*repmat(win',tamQuad,1);
Filtro2D = Filtro2D / norm(Filtro2D);
ImWGD = Filter2Mirror(Filtro2D,ImWGD);
imagesc(ImWGD(:,120:end)), title('Weighted Generalized Differences')
ImKF = Filter2Mirror(Filtro2D,ImKF);
figure, imagesc(ImKF(:,120:end)), title('Konishi-Fujii method')